%% Copyright (C) 2017, 2019, 2021 Dennis J. Darland

load("RULES2/life_0001.lf")?
load("FACTS2/facts_0071.lf")?
load("RULES2/rules_0071.lf")?
load("RULES2/rules_0072.lf")?
load("RULES2/rules_0073.lf")?
load("RULES2/rules_0074.lf")?
load("RULES2/rules_0075.lf")?
load("RULES2/rules_0076.lf")?

%% This file is part of darland's philosophy.

%% darland's philosophy is free software:
%% you can redistribute it and/or modify
%% it under the terms of
%% the GNU General Public License as published by
%% the Free Software Foundation,
%% either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed in the hope
%% that it will be useful, 
%% but WITHOUT ANY WARRANTY;
%% without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
%% See the
%% GNU General Public License for more details.

%% You should have received a copy of
%% the GNU General Public License
%% along with darland's philosophy.
%% If not, see <http://www.gnu.org/licenses/>.
%% This file only checks rules (relating to propositions). 

%% This is an example with a mini universe for queries of %% high complexity.

%% I use an example from Quine's Word & Object. (pp.144-151).

%% The Story of Cicero and Catiline is given
%% in _Caesar and Christ_, by Will Durant, pp. 140-147.

%% "Tully" is not in the index of that work
%% (or "De Senectute").

%% Wikipedia gives the full name as
%% "Marcus Tullius Cicero"
%% and notes
%% "The name is infrequently anglicized as Tully."
%% It also does not mention "De Senectute".

%% "De Senectute" is in Wikipedia under
%% "Writings of Cicero"

%% Tom believes that Cicero denounced Catiline.
%% Tom does not know Cicero = Tully.

%% In my philosophy, for Tom at that time,
%% "Cicero" R Toms_idea_of_Cicero
%% and
%% Toms_idea of_Cicero S Cicero
%%
%%
%% but not 
%% "Cicero" R Toms_idea_of_Tully
%% 
%%
%% In my program the relation R
%% is represented by the predicate
%% rrrr(Subject, Time, Type, Word, Idea)
%% In my program the relation S
%% is represented by the predicate
%% ssss(Subject, Time, Type, Idea, Object)

%% R | S is represented by rrss

trace_input(true)?

write_time(Ignore)?

%% I indicate for each query whether the immediate response should be
%% TRUE = Yes or FALSE = No

%% There may be subsequient No responses
%% - as I may have asked for additional answers
%% with semicolons.

%% There are 7 relations of both understanding and belief.
%% Those of understanding are defined
%% in terms of rrrr and ssss
%% Those of belief require also a belief_in_ideas
%% relation.

%% The 7 cases are:

%% words
%% ideas
%% objects

%% words_ideas
%% words_objects
%% ideas_objects

%% words_ideas_objects

%% First membership

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
%% 1
%% NA
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 2
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%% guarantees word & object

%% To keep the database simple I did not
%% declare "everyone" in these classes
%% There there are ideas with tttt relations
%% with several objects.
%%

member_plural_word_object( tom_dc, Time,
     Word, Object)?
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	

member_plural_word_object( quine_dc, Time,
     Word, Object)?
;
;	
;
;	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

member_plural_idea_object( tom_dc, Time,
     Idea, Object)?
;
;	
;
;	
;
;	
;
;	
;
;	
;
;	

member_plural_idea_object( quine_dc, Time,
     Idea, Object)?
;
;	
;
;
;	
;
;
;
;
;	
;
;
;
;
;	
;
;
;
;
;	
;
;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%% 

member_plural_word_idea_object( tom_dc,Time, Word,
			       Idea,
			       Object)?
;
;
;
;
;
;
;
;
;
;
;
;
;
;

member_plural_word_idea_object( quine_dc, Time, Word,
			       Idea,
			       Object)?
;
;
;
;
;
;
;
;
;
;	
;
;
;
;
;	
;
;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
%% 1
%% TRUE


exists_plural_word( tom_dc, Time, Word)? 
;
;
;
;
;
;
;
;
;
	
%% 2
%% TRUE

exists_plural_idea( tom_dc, Time, Idea)?
;
;
;
;
;
;
;
;
;
;
;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% guarantees word and idea

exists_plural_word_idea( tom_dc, Time, Word, Idea)?
;
;
;
;
;
;
;
;
;
;
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%% guarantees word & object


exists_plural_word_object( tom_dc, Time,
     Word, Object)?
;
;	
;
;
;
;
;
;
;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

exists_plural_idea_object( tom_dc, Time,
     Idea, Object)?
;
;	
;
;
;
;
;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%% 
	
exists_plural_word_idea_object( tom_dc, Time,
     Word, Idea, Object)?
;
;
;
;
;
;
;
;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% now equality -- only applies with object specified
%% 1
%% NA

%% 2
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%%
%% TRUE

equal_plural_words_objects( tom_dc, now,
     human_class_word_dc,
    featherless_biped_class_word_dc)?

%% FALSE

equal_plural_words_objects( tom_dc, now,
     human_class_word_dc,
    roman_class_word_dc)?

%% FALSE

equal_plural_words_objects( tom_dc, now,
     roman_class_word_dc,
     featherless_biped_class_word_dc)?

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

%% TRUE

equal_plural_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_featherless_biped_class_idea_dc)?

%% FALSE

equal_plural_ideas_objects( tom_dc, now,
     tom_roman_class_idea_dc,
     tom_featherless_biped_class_idea_dc)?
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%%

%% TRUE

equal_plural_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     featherless_biped_class_word_dc,
     tom_human_class_idea_dc,
     tom_featherless_biped_class_idea_dc)?
;
;
;
;
;
%% FALSE

equal_plural_words_ideas_objects( tom_dc, now,
     roman_class_word_dc,
     featherless_biped_class_word_dc,
     tom_roman_class_idea_dc,
     tom_featherless_biped_class_idea_dc)?
;
;
;
;
;
;
;
;
;
;
;
;
;



%% TRUE

equal_plural_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     featherless_biped_class_word_dc,
     tom_human_class_idea_dc,
     tom_featherless_biped_class_idea_dc)?

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% now functions -- only applies with object specified
%% 1
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5
%% guarantees word & object

%% TRUE
function_plural_word( tom_dc, now,
     human_word_dc,
     human_class_word_dc)?
;
;
;
;
;
;
;
;
;
;
;
;
;

%% FALSE some humans are not roman
function_plural_word( tom_dc, now,
     roman_word_dc, human_class_word_dc)?
;
;
;
;
;
;
;
;
;
;

%% FALSE some humans are not dolphins 
function_plural_word( tom_dc, now,
     dolphin_word_dc,
     human_class_word_dc)?
;
;	
;
;	
;
;	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

%% TRUE
function_plural_idea( tom_dc, now,
     tom_human_idea_dc,
     tom_human_class_idea_dc)?
;

%% FALSE
function_plural_idea( tom_dc, now,
     tom_roman_idea_dc,
     tom_human_class_idea_dc)?
;
%% FALSE
function_plural_idea( tom_dc, now,
     tom_dolphin_idea_dc,
     tom_human_class_idea_dc)?

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%% 
%% TRUE

function_plural_word_idea( tom_dc, now,
     human_word_dc,
     human_class_word_dc,
     tom_human_class_idea_dc)?
;

%% FALSE
function_plural_word_idea( tom_dc, now,
     roman_word_dc,
     human_class_word_dc,
     tom_roman_class_idea_dc)?
;
	
%% FALSE
function_plural_word_idea( tom_dc, now,
     dolphin_word_dc,
     roman_class_word_dc,
     tom_roman_class_idea_dc)?
;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	
%% Start testing new predicates 9/21/2021 

tttt( tom_dc, now, Y, X)? 
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;

%% INCLUSION
	
inclusion_plural_words_objects( tom_dc, now,
     human_class_word_dc,
     american_class_word_dc)?
	
inclusion_plural_words_objects( tom_dc, now,
     american_class_word_dc,
     human_class_word_dc)?
	
inclusion_plural_ideas_objects( tom_dc, now,
     tom_american_class_idea_dc,
     tom_human_class_idea_dc)?

inclusion_plural_words_ideas_objects( tom_dc, now,
     american_class_word_dc,
     tom_american_class_idea_dc,
     human_class_word_dc,
     tom_human_class_idea_dc)?

%% INTERSECTION

in_intersection_plural_words_objects( tom_dc, now,
     human_class_word_dc,
     dolphin_class_word_dc,
     tom_cicero_dc)?

in_intersection_plural_words_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_cicero_dc)?

in_intersection_plural_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_dolphin_class_idea_dc,
     tom_cicero_dc)?

in_intersection_plural_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     tom_cicero_dc)?

in_intersection_plural_words_ideas_objects( tom_dc, now,
     dolpin_class_word_dc,
     roman_class_word_dc,
     tom_dolphin_class_idea_dc,
     tom_roman_class_idea_dc,
     tom_cicero_dc)?

in_intersection_plural_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     tom_cicero_dc)?

%% UNION

in_union_plural_words_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     quine_dc)?

in_union_plural_words_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     flipper_dc)?

in_union_plural_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     quine_dc)?

in_union_plural_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     quine_dc)?

in_union_plural_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     flipper_dc)?

%% MINUS

in_w1_minus_w2_words_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_cicero_dc)?


in_w1_minus_w2_words_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     quine_dc)?

in_i1_minus_i2_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     tom_cicero_dc)?

in_i1_minus_i2_ideas_objects( tom_dc, now,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     quine_dc)?

in_wi1_minus_wi2_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     tom_cicero_dc)?

in_wi1_minus_wi2_words_ideas_objects( tom_dc, now,
     human_class_word_dc,
     roman_class_word_dc,
     tom_human_class_idea_dc,
     tom_roman_class_idea_dc,
     quine_dc)?

%% NUMBER ZERO

%% 5

in_zero_plural_word_object( Subject, Time, Word)?
;
;
;
;
;
;
;
;
;

%% 6
	
in_zero_plural_idea_object( Subject, Time, Idea)?
;
;
;
;
;
;
;
;

%% 7	
	
in_zero_plural_word_idea_object( Subject, Time,
     Word, Idea)?


%% NUMBER ONE

%% 5

in_one_plural_word_object( Subject, Time, Word)?
;
;
;
;
;

%% 6
	
in_one_plural_idea_object( Subject, Time, Idea)?
;
;
;
;
;

%% 7
	
in_one_plural_word_idea_object( Subject, Time,
     Word, Idea)?
;
;
;
;
;

%% NUMBER TWO

%% 5	
	
in_two_plural_word_object( Subject, Time, Word)?
;
;	
;
;	
;
;	
;
;	

%% 6	
	
in_two_plural_idea_object( Subject, Time, Idea)?
;
;	
;
;	
;
;	
;
;	

%% 7	
	
in_two_plural_word_idea_object( Subject, Time,
     Word,Idea)?
;
;	
;
;	
;
;	
;
;	



%% SUCCESSOR

in_successor_plural_idea_object( tom_dc, now,
     tom_flipper_class_idea_dc, tom_cat_class_idea_dc)?

%% OTHER

A = bagof(Objects, ssss(tom_dc, now, tom_cicero_idea_dc,
			Objects))?


class_list(B, tom_dc, now, tom_flipper_class_idea_dc)?



write_stats(Ignore)?

halt?
