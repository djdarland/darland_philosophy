%% Copyright (C) 2017, 2019 Dennis J. Darland

%% This file is part of darland's philosophy.

%% darland's philosophy is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed in the hope that it will be useful, 
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%% GNU General Public License for more details.

%% You should have received a copy of the GNU General Public License
%% along with darland's philosophy. If not, see <http://www.gnu.org/licenses/>.


%% Life database for use with predicates 
%% to simulate Dennis J. Darlands philosophy. 
%% Started Writing 1/4/2017
%% Major re-write starting 8/19/2019
%%
%% Total rewite of what I started about 2007.
%%

%% common_facts_2017_0003.lf    %% Facts primarily about beliefs

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% conventions.
%% tom, quine, cicero etc stand for people (instances of Subjects or Objects.)
%% There could also be non-animate objects such as a table/
%% there (some would argue) might also be non-human Subjects - such as a dog.
%% tom might have an idea of cicero. This would be represented tom_cicero_idea.
%% The 1st tom indicates that it is tom's idea. cicero indicates that it is an
%% idea of cicero. The final idea indicates that it is an idea.
%% tom might have an word in a shared language for cicero. This is indicated by %% cicero_word. 
%% quine might also an idea quine_cicero_idea of cicero. (note his idea is
%% different). quine might share, however the word cicero_word with tom.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% believes_ideas and believes_words are the only primitive belief relations
%% needed.
%% I define several others in terms of them. 
%%

%%
believes_in_ideas(tom, now, 1, 2, [tom_denounced_idea, tom_cicero_idea,
				   tom_cataline_idea]).
believes_in_ideas(tom, now, 1, 2, [tom_denounced_idea, tom_tully_idea,
				   tom_cataline_idea]).
believes_in_ideas(tom, now, 1, 1, [tom_human_idea, tom_tully_idea]).
believes_in_ideas(quine, now, 1, 2, [quine_denounced_idea, quine_cicero_idea,
				     quine_cataline_idea]).
believes_in_ideas(quine, now, 1, 2, [quine_denounced_idea, quine_tully_idea,
				     quine_cataline_idea]).
believes_in_words(tom, now, 1, 2, [denounced_word, cicero_word,
				   cataline_word]).
believes_in_words(tom, now, 1, 2, [denounced_word, tully_word,
				   cataline_word]).
believes_in_words(tom, now, 1, 1, [human_word, tully_word]).
believes_in_words(quine, now, 1, 2, [denounced_word, cicero_word, cataline_word]).
believes_in_words(quine, now, 1, 2, [denounced_word, tully_word, cataline_word]).



%% believes_in_ideas(tom, now, 1, 2, tom_not_formally_equivalent_idea, tom_human_idea, tom_featherless_biped_idea, nop).

%% believes_in_ideas(quine, now, 1, 2, quine_formally_equivalent_idea, quine_human_idea, quine_featherless_biped_idea, nop).


human(tom).
human(cicero).
human(cataline).

featherless_biped(tom).
featherless_biped(c1icero).
featherless_biped(cataline).

american(tom).

roman(cicero).
roman(cataline).

denounced(cicero, cataline).
denounced(tom, cataline).

