%% Copyright (C) 2017, 2019, 2021 Dennis J. Darland

%% This file is part of darland's philosophy.

%% darland's philosophy is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed in the hope that it will be useful, 
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%% GNU General Public License for more details.

%% You should have received a copy of the GNU General Public License
%% along with darland's philosophy. If not, see <http://www.gnu.org/licenses/>.

persistent(clock_start)?

write_time :- write(system("date")),
	clock_start <<- real_time.

write_stats :- write("CPU Time ", cpu_time, " Seconds"),nl,
	write("Clock Time ", real_time - clock_start, " Seconds"),nl,
	statistics.

load("../RULES/rules.lf")?

write_time?
%% BEGIN max_and = 3
satisfiable([nand, [nand, Var_3, [nand, [nand, Var_1, Var_2], [nand, Var_1, Var_2]]],[nand, Var_3, [nand, [nand, Var_1, Var_2], [nand, Var_1, Var_2]]]])?
;
;
;
 
 
%% END max_and = 3
write_stats?

halt?
