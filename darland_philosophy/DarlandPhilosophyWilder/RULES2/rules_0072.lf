
%% Copyright (C) 2017, 2019, 2020, 2021, 2022
%% Dennis J. Darland

%% This file is part of darland's philosophy.

%% darland's philosophy is free software:
%% you can redistribute it and/or modify
%% it under the terms of the
%% GNU General Public License as published by
%% the Free Software Foundation,
%% either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed
%% in the hope that it will be useful, 
%% but WITHOUT ANY WARRANTY;
%% without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
%% See the
%% GNU General Public License for more details.

%% You should have received a copy of the
%% GNU General Public License
%% along with darland's philosophy.
%% If not, see <http://www.gnu.org/licenses/>.


%% Common Prolog & Life predicates
%% to simulate Dennis J. Darlands philosophy. 
%% Started Writing 1/4/2017 
%% This is a total rewrite of what I started
%% about 10 years ago.
%% 
%% December Started adapting to Alfred North Whitehead's
%% Metaphysics
%%

%% propositional attitudes are represented by conceptual
%% feelings with subjective aims such as belief

%%    There is one primitive sort of belief - in ideas

%%    conceptual_feeling_in_ideas(Subject, believes, Time,
%%		      [Relation_Idea,
%%		      A_Idea,
%%		      B_Idea,
%%		      C_Idea, ... ])

%% The Subject at Time has a belief relation
%% between the Relation_Idea and
%% The following Ideas.

%% There are 7 relations of both belief and disbelief.
%% Those of understanding are defined in terms
%% of rrrr and ssss
%% Those of belief require also a
%% conceptual_feeling_in_ideas of belief.

%% The 7 cases are:

%% 1 words
%% 2 ideas
%% 3 objects

%% 4 words_ideas
%% 5 words_objects
%% 6 ideas_objects

%% 7 words_ideas_objects


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% These correspond to understanding.
%% Except they involve belief
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 1


conceptual_feeling_words( Subject, Subjective_aim, Time,
			 [[Relation_Word] | List]) :-
	Subjective_aim :== believes,
	%% list of words

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word( Subject, Subjective_aim, Time, List,
		      Arity, Type - 1, [Relation_Idea]).


match_sa_word( Subject, Subjective_aim, Time, [], 0, Type,
	      Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word( Subject, Subjective_aim, Time,
	      [], -999, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word( Subject, Subjective_aim, Time,
	      [[Word] | List],
	      Arity, Type, Idea_List) :-
	% List of Word Idea Pair.

	rrrr( Subject, Time, Word, Idea),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word( Subject, Subjective_aim, Time,
		      List,
		      % if Arity is not Arbitrary sub 1

		      cond( Arity =\= -999, Arity - 1,
			   -999),
		      Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2
%% conceptual_feeling_in_ideas is primitive for these purposes
%% conceptual_feeling_words(Subject, Subjective_aim, Time, List) :-
%%	Subjective_aim :== believes,
%%	conceptual_feeling_in_ideas(Subject, believes, Time, List).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3


conceptual_feeling_objects( Subject, Subjective_aim, Time, [[Relation] | List]) :-
	Subjective_aim :== believes,
	%% list of idea object Pairs

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_object( Subject, Subjective_aim,
			Time, List,
			Arity, Type - 1, [Relation_Idea]).


conceptual_feeling_objects( Subject,
			   Subjective_aim, Time,
			   [[Relation] | List]) :-
	%% list of idea object Pairs

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_object( Subject,
			Subjective_aim, Time, List,
			Arity, Type - 1, [Relation_Idea]).


match_sa_object( Subject, Subjective_aim,
		Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_object( Subject, Subjective_aim,
		Time, [], -999, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_object( Subject, Subjective_aim, Time,
		[[Object] | List],
		Arity, Type, Idea_List) :-
	% List of Objects.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_object( Subject,
			Subjective_aim, Time,
			List,
			% if Arity is not Arbitrary sub 1

			cond( Arity =\= -999, Arity - 1,
			     -999),
			Type, Idea_List_Out).


match_sa_object( Subject, Subjective_aim, Time,
		[[Object] | List],
		Arity, Type, Idea_List) :-
	% List of Objects.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_object( Subject,
			Subjective_aim, Time,
			List,
			% if Arity is not Arbitrary sub 1

			cond( Arity =\= -999, Arity - 1,
			     -999),
			Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4


conceptual_feeling_words_ideas( Subject,
			       Subjective_aim,
			       Time,
			       [[Relation_Word,
				 Relation_Idea] |
				PairList]) :-
	Subjective_aim :== believes,
	%% list of word, idea pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time, PairList,
			   Arity, Type - 1,
			   [Relation_Idea]).


conceptual_feeling_words_ideas( Subject,
			       Subjective_aim,
			       Time,
			       [[Relation_Word,
				 Relation_Idea] |
				PairList]) :-
	%% list of word, idea pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time, PairList,
			   Arity, Type - 1, [Relation_Idea]).


match_sa_word_idea( Subject,
		   Subjective_aim,
		   Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word_idea( Subject,
		   Subjective_aim,
		   Time, [], -999, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word_idea( Subject, Subjective_aim, Time,
		   [[Word, Idea] | PairList],
		   Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time,
			   PairList,
			   % if Arity is not Arbitrary sub 1

			   cond( Arity =\= -999, Arity - 1,
				-999),
			   Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	Subjective_aim :== believes,
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_object( Subject,
			     Subjective_aim,
			     Time, Pair_List,
			     Arity, Type - 1,
			     [Relation_Idea]).


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_object( Subject,
			     Subjective_aim,
			     Time, Pair_List,
			     Arity, Type - 1,
			     [Relation_Idea]).


match_sa_word_object( Subject,
		     Subjective_aim,
		     Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word_object( Subject,
		     Subjective_aim,
		     Time, [], -999, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word_object( Subject,
		     Subjective_aim,
		     Time,
		     [[Word, Object] | Pair_List],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_object( Subject,
			     Subjective_aim, Time,
			     Pair_List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).


match_sa_word_object( Subject, Subjective_aim, Time,
		     [[Word, Object] | Pair_List],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_object( Subject,
			     Subjective_aim, Time,
			     Pair_List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	Subjective_aim :== believes,
	%% list of word, idea object triples

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     Arity, Type - 1,
			     [Relation_Idea]).


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	%% list of word, idea object triples

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     Arity, Type - 1,
			     [Relation_Idea]).


match_sa_idea_object( Subject,
		     Subjective_aim,
		     Time, [], 0,
		     Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_idea_object( Subject,
		     Subjective_aim,
		     Time, [], Arity,
		     Idea_List) :-
	Arity =:= -999,

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_idea_object( Subject,
		     Subjective_aim, Time,
		     [[Idea, Object] | PairList],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).


match_sa_idea_object( Subject,
		     Subjective_aim, Time,
		     [[Idea, Object] | PairList],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,

	match_sa_idea_object( Subject,
			     Subjective_aim, Time,
			     PairList,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	Subjective_aim :== believes,
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 Arity,
					 Type - 1,
					 [Relation_Idea]).


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 Arity,
					 Type - 1,
					 [Relation_Idea]).


match_sa_triple_word_idea_object( Subject,
				 Subjective_aim, Time,
				 [], 0, Type,
				 Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time,
				    Idea_List).

%% -999 indicates arbitrary arity.

match_sa_triple_word_idea_object( Subject,
				 Subjective_aim,
				 Time, [], -999,
				 Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_triple_word_idea_object( Subject,
				 Subjective_aim,
				 Time,
				 [[Word, Idea, Object]
				 | TripleList],
				 Arity,
				 Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 % if Arity is not Arbitrary sub 1

					 cond( Arity =\= -999, Arity - 1,
					      -999),
					 Type, Idea_List_Out).



match_sa_triple_word_idea_object( Subject,
				 Subjective_aim, Time,
				 [[Word, Idea, Object]
				 | TripleList],
				 Arity, Type,
				 Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 % if Arity is not Arbitrary sub 1

					 cond( Arity =\= -999, Arity - 1,
					      -999),
					 Type, Idea_List_Out).



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% These correspond to understanding.
%% Except they involve disbelief
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 1


conceptual_feeling_words( Subject, Subjective_aim, Time, [[Relation_Word] | List]) :-
	Subjective_aim :== disbelieves,
	%% list of words

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word( Subject, Subjective_aim, Time, List,
		      Arity, Type - 1, [Relation_Idea]).


match_sa_word( Subject, Subjective_aim, Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word( Subject, Subjective_aim, Time,
	      [], -999, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word( Subject, Subjective_aim, Time,
	      [[Word] | List],
	      Arity, Type, Idea_List) :-
	% List of Word Idea Pair.

	rrrr( Subject, Time, Word, Idea),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word( Subject, Subjective_aim, Time,
		      List,
		      % if Arity is not Arbitrary sub 1
		      cond(Arity =\= -999, Arity - 1,
			   -999),
		      Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2
%% conceptual_feeling_in_ideas is primitive for these purposes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3


conceptual_feeling_objects( Subject, Subjective_aim, Time, [[Relation] | List]) :-
	Subjective_aim :== disbelieves,
	%% list of idea object Pairs

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_object( Subject, Subjective_aim,
			Time, List,
			Arity, Type - 1, [Relation_Idea]).


conceptual_feeling_objects( Subject,
			   Subjective_aim, Time,
			   [[Relation] | List]) :-
	%% list of idea object Pairs

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_object( Subject,
			Subjective_aim, Time, List,
			Arity, Type - 1, [Relation_Idea]).


match_sa_object( Subject, Subjective_aim,
		Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_object( Subject, Subjective_aim,
		Time, [], -999, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_object( Subject, Subjective_aim, Time,
		[[Object] | List],
		Arity, Type, Idea_List) :-
	% List of Objects.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_object( Subject,
			Subjective_aim, Time,
			List,
			% if Arity is not Arbitrary sub 1

			cond(Arity =\= -999, Arity - 1,
			     -999),
			Type, Idea_List_Out).


match_sa_object( Subject, Subjective_aim, Time,
		[[Object] | List],
		Arity, Type, Idea_List) :-
	% List of Objects.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_object( Subject,
			Subjective_aim, Time,
			List,
			% if Arity is not Arbitrary sub 1

			cond( Arity =\= -999, Arity - 1,
			     -999),
			Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4


conceptual_feeling_words_ideas( Subject,
			       Subjective_aim,
			       Time,
			       [[Relation_Word,
				 Relation_Idea] |
				PairList]) :-
	Subjective_aim :== disbelieves,
	%% list of word, idea pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time, PairList,
			   Arity, Type - 1,
			   [Relation_Idea]).


conceptual_feeling_words_ideas( Subject,
			       Subjective_aim,
			       Time,
			       [[Relation_Word,
				 Relation_Idea] |
				PairList]) :-
	%% list of word, idea pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time, PairList,
			   Arity, Type - 1, [Relation_Idea]).


match_sa_word_idea( Subject,
		   Subjective_aim,
		   Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word_idea( Subject,
		   Subjective_aim,
		   Time, [], -999, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word_idea( Subject, Subjective_aim, Time,
		   [[Word, Idea] | PairList],
		   Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_idea( Subject,
			   Subjective_aim, Time,
			   PairList,
			   % if Arity is not Arbitrary sub 1

			   cond( Arity =\= -999, Arity - 1,
				-999),
			   Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	Subjective_aim :== disbelieves,
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_object( Subject,
			     Subjective_aim,
			     Time, Pair_List,
			     Arity, Type - 1,
			     [Relation_Idea]).


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_word_object( Subject,
			     Subjective_aim,
			     Time, Pair_List,
			     Arity, Type - 1,
			     [Relation_Idea]).


match_sa_word_object( Subject,
		     Subjective_aim,
		     Time, [], 0, Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_word_object( Subject,
		     Subjective_aim,
		     Time, [], -999, Idea_List) :-

	conceptual_feeling_in_ideas(Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_word_object( Subject,
		     Subjective_aim,
		     Time,
		     [[Word, Object] | Pair_List],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_object( Subject,
			     Subjective_aim, Time,
			     Pair_List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).


match_sa_word_object( Subject, Subjective_aim, Time,
		     [[Word, Object] | Pair_List],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_word_object( Subject,
			     Subjective_aim, Time,
			     Pair_List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	Subjective_aim :== disbelieves,
	%% list of word, idea object triples

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     Arity, Type - 1,
			     [Relation_Idea]).


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	%% list of word, idea object triples

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     Arity, Type - 1,
			     [Relation_Idea]).


match_sa_idea_object( Subject,
		     Subjective_aim,
		     Time, [], 0,
		     Type, Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).

%% -999 indicates arbitrary arity.

match_sa_idea_object( Subject,
		     Subjective_aim,
		     Time, [], Arity,
		     Idea_List) :-
	Arity =:= -999,

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_idea_object( Subject,
		     Subjective_aim, Time,
		     [[Idea, Object] | PairList],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,

	match_sa_idea_object( Subject,
			     Subjective_aim,
			     Time, PairList,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).


match_sa_idea_object( Subject,
		     Subjective_aim, Time,
		     [[Idea, Object] | PairList],
		     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,

	match_sa_idea_object( Subject,
			     Subjective_aim, Time,
			     PairList,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	Subjective_aim :== disbelieves,
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 Arity,
					 Type - 1,
					 [Relation_Idea]).


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 Arity,
					 Type - 1,
					 [Relation_Idea]).


match_sa_triple_word_idea_object( Subject,
				 Subjective_aim, Time,
				 [], 0, Type,
				 Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time,
				    Idea_List).

%% -999 indicates arbitrary arity.

match_sa_triple_word_idea_object( Subject,
				 Subjective_aim,
				 Time, [], -999,
				 Idea_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List).


match_sa_triple_word_idea_object( Subject,
				 Subjective_aim,
				 Time,
				 [[Word, Idea, Object]
				 | TripleList],
				 Arity,
				 Type, Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 % if Arity is not Arbitrary sub 1

					 cond( Arity =\= -999, Arity - 1,
					      -999),
					 Type, Idea_List_Out).



match_sa_triple_word_idea_object( Subject,
				 Subjective_aim, Time,
				 [[Word, Idea, Object]
				 | TripleList],
				 Arity, Type,
				 Idea_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_triple_word_idea_object( Subject,
					 Subjective_aim,
					 Time,
					 TripleList,
					 % if Arity is not Arbitrary sub 1

					 cond( Arity =\= -999, Arity - 1,
					      -999),
					 Type, Idea_List_Out).





%%%%%%%%%%%%%%

%% 1 words
%% 2 ideas
%% 3 objects

%% 4 words_ideas
%% 5 words_objects
%% 6 ideas_objects

%% 7 words_ideas_objects

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Now Contradicting beliefs!!
%% 1

contradicts_words( Subject, Time, List) :-

	conceptual_feeling_words( Subject,
				 believes, Time, List),

	conceptual_feeling_words( Subject,
				 disbelieves, Time, List).

%% 2

contradicts_ideas( Subject, Time, List) :-

	conceptual_feeling_in_ideas( Subject,
				    believes, Time, List),

	conceptual_feeling_in_ideas( Subject,
				    disbelieves,
				    Time, List).

%% 3

contradicts_objects( Subject, Time, List) :-

	conceptual_feeling_objects( Subject,
				   believes, Time, List),

	conceptual_feeling_objects( Subject,
				   disbelieves, Time,
				   List).

%% 4

contradicts_words_ideas( Subject, Time, Pair_List) :-

	conceptual_feeling_words_ideas( Subject,
				       believes, Time,
				       Pair_List),

	conceptual_feeling_words_ideas( Subject,
				       disbelieves,
				       Time, Pair_List).

%% 5

contradicts_words_objects( Subject, Time, Pair_List) :-

	conceptual_feeling_words_objects( Subject,
					 believes,
					 Time, Pair_List),

	conceptual_feeling_words_objects( Subject,
					 disbelieves,
					 Time, Pair_List).

%% 6

contradicts_ideas_objects( Subject, Time, Pair_List) :-

	conceptual_feeling_ideas_objects( Subject,
					 believes,
					 Time, Pair_List),

	conceptual_feeling_ideas_objects( Subject,
					 disbelieves,
					 Time, Pair_List).

%% 7

contradicts_words_ideas_objects( Subject, Time,
				Triple_List) :-

	conceptual_feeling_words_ideas_objects( Subject,
					       believes,
					       Time,
					       Triple_List),

	conceptual_feeling_words_ideas_objects( Subject,
					       disbelieves,
					       Time,
					       Triple_List).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% These correspond to understanding.
%% Except they involve true belief
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 1

%% Words do not determine Truth
%% NA
%% 2
%% Ideas do not determine Truth
%% NA

%% 3


conceptual_feeling_objects( Subject, Subjective_aim, Time, [[Relation] | List]) :-
	Subjective_aim :== believes_truly,

	write( "cfo truly 00001A"), nl,
	%% list of idea object Pairs

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_object( Subject, Subjective_aim,
			     Time, List,
			     Arity, Type - 1, [Relation_Idea],
			     [[Relation] | List]).


conceptual_feeling_objects( Subject,
			   Subjective_aim, Time,
			   [[Relation] | List]) :-

	write( "cfo truly 00001B"), nl,
	Subjective_aim :== believes_truly,
	%% list of idea object Pairs

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_object( Subject,
			     Subjective_aim, Time, List,
			     Arity, Type - 1, [Relation_Idea],
			     [[Relation] | List]).


match_sa_true_object( Subject, Subjective_aim,
		     Time, [], 0, Type, Idea_List,Objects) :-

	conceptual_feeling_in_ideas( Subject,
				    believes,
				    Time, Idea_List),
	pos_qq(Objects).

%% -999 indicates arbitrary arity.

match_sa_true_object( Subject, Subjective_aim,
		     Time, [], -999, Type, Idea_List,
		     Objects) :-

	conceptual_feeling_in_ideas( Subject,
				    believes,
				    Time, Idea_List),
	pos_qq(Objects).


match_sa_true_object( Subject, believes_truly, Time,
		     [[Object] | List],
		     Arity, Type, Idea_List,Objects) :-
	% List of Objects.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_true_object( Subject,
			     believes_truly, Time,
			     List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out).


match_sa_true_object( Subject, believes_truly, Time,
		     [[Object] | List],
		     Arity, Type, Idea_List,Objects) :-
	% List of Objects.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_true_object( Subject,
			     believes_truly, Time,
			     List,
			     % if Arity is not Arbitrary sub 1

			     cond( Arity =\= -999, Arity - 1,
				  -999),
			     Type, Idea_List_Out),
	pos_qq(Objects).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	Subjective_aim :== believes_truly,
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_word_object( Subject,
				  Subjective_aim,
				  Time, Pair_List,
				  Arity, Type - 1,
				  [Relation_Idea],
				  [[Relation_Word, Relation]
				  | Pair_List]).


conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	%% list of word, idea object pairs

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_word_object( Subject,
				  Subjective_aim,
				  Time, Pair_List,
				  Arity, Type - 1,
				  [Relation_Idea],
				  [[Relation_Word, Relation]
				  | Pair_List]).


match_sa_true_word_object( Subject,
			  Subjective_aim,
			  Time, [], 0, Type, Idea_List,
			  Fact_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List),
	pos_pos(Fact_List).

%% -999 indicates arbitrary arity.

match_sa_true_word_object( Subject,
			  Subjective_aim,
			  Time, [], -999, Idea_List,
			  Fact_List) :-

	conceptual_feeling_in_ideas(Subject,
				    Subjective_aim,
				    Time, Idea_List),
	pos_qq(Fact_List).


match_sa_true_word_object( Subject,
			  Subjective_aim,
			  Time,
		  [[Word, Object] | Pair_List],
			  Arity, Type, Idea_List,
			  Fact_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_true_word_object( Subject,
				  Subjective_aim, Time,
				  Pair_List,
				  % if Arity is not Arbitrary sub 1

				  cond( Arity =\= -999,
				       Arity - 1,
				       -999),
				  Type, Idea_List_Out,
				  Fact_List).


match_sa_true_word_object( Subject, Subjective_aim, Time,
			  [[Word, Object] | Pair_List],
			  Arity, Type, Idea_List,
			  Fact_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),

	match_sa_true_word_object( Subject,
				  Subjective_aim, Time,
				  Pair_List,
				  % if Arity is not Arbitrary sub 1

				  cond( Arity =\= -999,
				       Arity - 1,
				       -999),
				  Type, Idea_List_Out,
				  Fact_List).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	Subjective_aim :== believes_truly,
	%% list of word, idea object triples

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_idea_object( Subject,
				  Subjective_aim,
				  Time, PairList,
				  Arity, Type - 1,
				  [Relation_Idea],
				  [[Relation_Idea,
				    Relation] |
				   PairList]).


conceptual_feeling_ideas_objects( Subject,
				 Subjective_aim,
				 Time,
				 [[Relation_Idea,
				   Relation] |
				  PairList]) :-
	%% list of word, idea object triples

	number_idea(Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_idea_object( Subject,
				  Subjective_aim,
				  Time, PairList,
				  Arity, Type - 1,
				  [Relation_Idea],
				 [[Relation_Idea,
				   Relation] |
				  PairList]).


match_sa_true_idea_object( Subject,
			  Subjective_aim,
			  Time, [], 0,
			  Type, Idea_List, Fact_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List),
	pos_qq(Fact_List).

%% -999 indicates arbitrary arity.

match_sa_true_idea_object( Subject,
			  Subjective_aim,
			  Time, [], Arity,
			  Idea_List, Fact_List) :-
	Arity =:= -999,

	conceptual_feeling_in_ideas(Subject,
				    Subjective_aim,
				    Time, Idea_List),
	pos_qq(Fact_List).


match_sa_true_idea_object( Subject,
			  Subjective_aim, Time,
			  [[Idea, Object] | PairList],
			  Arity, Type, Idea_List,
			  Fact_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),

	Idea_List_Out = append( Idea_List, [Idea]),
	Arity > 0,

	match_sa_true_idea_object( Subject,
				  Subjective_aim,
				  Time, PairList,
				  % if Arity is not Arbitrary sub 1

				  cond( Arity =\= -999,
				       Arity - 1,
				       -999),
				  Type, Idea_List_Out, Fact_List).


match_sa_true_idea_object( Subject,
			  Subjective_aim, Time,
			  [[Idea, Object] | PairList],
			  Arity, Type, Idea_List, Fact_List) :-
	% List of Word Idea Object Triple.

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),

	Idea_List_Out = append( Idea_List, [Idea]),
	Arity > 0,

	match_sa_true_idea_object( Subject,
				  Subjective_aim, Time,
				  PairList,
				  % if Arity is not Arbitrary sub 1

				  cond( Arity =\= -999,
				       Arity - 1,
				       -999),
				  Type, Idea_List_Out,
				  Fact_List).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	Subjective_aim :== believes_truly,
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, singular),

	ssss2( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_triple_word_idea_object( Subject,
					      Subjective_aim,
					      Time,
					      TripleList,
					      Arity,
					      Type - 1,
					      [Relation_Idea],
					      [[Relation_Word,
						Relation_Idea,
						Relation] |
					       TripleList]).


conceptual_feeling_words_ideas_objects( Subject,
				       Subjective_aim,
				       Time,
				       [[Relation_Word,
					 Relation_Idea,
					 Relation] |
					TripleList]) :-
	%% list of word, idea object triples

	rrrr( Subject, Time, Relation_Word, Relation_Idea),

	number_idea( Relation_Idea, plural),

	tttt( Subject, Time, Relation_Idea, Relation),

	arity_idea( Relation_Idea, Arity),

	type_idea( Relation_Idea, Type),

	match_sa_true_triple_word_idea_object( Subject,
					      Subjective_aim,
					      Time,
					      TripleList,
					      Arity,
					      Type - 1,
					      [Relation_Idea],
					      [[Relation_Word,
						Relation_Idea,
						Relation] |
					       TripleList]).


match_sa_true_triple_word_idea_object( Subject,
				      Subjective_aim, Time,
				      [], 0, Type,
				      Idea_List, Fact_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time,
				    Idea_List),
	pos_qq(Fact_List).

%% -999 indicates arbitrary arity.

match_sa_true_triple_word_idea_object( Subject,
				      Subjective_aim,
				      Time, [], -999,
				      Idea_List, Fact_List) :-

	conceptual_feeling_in_ideas( Subject,
				    Subjective_aim,
				    Time, Idea_List),
	pos_qq(Fact_List).


match_sa_true_triple_word_idea_object( Subject,
				      Subjective_aim,
				      Time,
				      [[Word, Idea, Object]
				      | TripleList],
				      Arity,
				      Type, Idea_List,
				      Fact_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, singular),

	ssss2( Subject, Time, Idea, Object),

	type_idea( Idea, Type),

	Idea_List_Out = append( Idea_List, [Idea]),

	match_sa_true_triple_word_idea_object( Subject,
					      Subjective_aim,
					      Time,
					      TripleList,
					      % if Arity is not Arbitrary sub 1

					      cond( Arity =\=
						     -999,
						   Arity - 1,
						   -999),
					      Type,
					      Idea_List_Out,
					      Fact_List).



match_sa_true_triple_word_idea_object( Subject,
				      Subjective_aim, Time,
				      [[Word, Idea, Object]
				      | TripleList],
				      Arity, Type,
				      Idea_List, Fact_List) :-
	% List of Word Idea Object Triple.

	rrrr( Subject, Time, Word, Idea),

	number_idea( Idea, plural),

	tttt( Subject, Time, Idea, Object),

	type_idea( Idea, Type),

	Idea_List_Out = append( Idea_List, [Idea]),

	match_sa_true_triple_word_idea_object( Subject,
					      Subjective_aim,
					      Time,
					      TripleList,
					      % if Arity is not Arbitrary sub 1

					      cond( Arity =\=
						     -999,
						   Arity - 1,
						   -999),
					      Type, Idea_List_Out,
					      Fact_List).



