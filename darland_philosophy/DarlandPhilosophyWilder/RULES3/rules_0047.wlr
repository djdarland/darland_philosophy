%% Copyright (C) 2017, 2019, 2020, 2021 Dennis J. Darland

%% This file is part of darland's philosophy.

%% darland's philosophy is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed in the hope that it will be useful, 
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%% GNU General Public License for more details.

%% You should have received a copy of the GNU General Public License
%% along with darland's philosophy. If not, see <http://www.gnu.org/licenses/>.
%% Common Prolog & Life predicates to simulate Dennis J. Darlands philosophy. 
%% Started Writing 1/4/2017 
%% This is a total rewrite of what I started about 10 years ago.
%% 
%%
%%
%%

%%    There is one primitive sort of belief - in ideas

%%    believes_in_ideas( Subject, Time,
%%		      [Relation_Idea,
%%		      A_Idea,
%%		      B_Idea,
%%		      C_Idea, ... ])

%% The Subject at Time has a belief relation between the Relation_Idea and
%% The following Ideas.

%% There are 7 relations of both belief and belief_not.
%% Those of understanding are defined in terms of rrrr and ssss
%% Those of belief require also a belief_in_ideas relation.

%% The 7 cases are:

%% 1 words
%% 2 ideas
%% 3 objects

%% 4 words_ideas
%% 5 words_objects
%% 6 ideas_objects

%% 7 words_ideas_objects


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% These correspond to understanding.
%% Except they involve belief as is indeicated by belief_in_ideas.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 1

believes_nonsense_words( Subject, Time, List) :-
	believes_words( Subject, Time, List),
	nonsense_words( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2

believes_nonsense_ideas( Subject, Time, List) :-
	believes_in_ideas( Subject, Time, List),
	list_of_lists(List, [], List_Fin, 0),
	nonsense_ideas( Subject, Time, List_Fin).


% Have to convert list to list of lists because believes_in_ideas is different

list_of_lists([], List_Out, List_Out, Num) :-
	cond(Num > 10 , halt).

list_of_lists([Head | Tail], List_In, List_Fin, Num) :-
	cond(Num > 10 , halt),
	List_Work = append(List_In, [[Head]]),
	list_of_lists(Tail, List_Work, List_Fin, Num + 1).

	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3

believes_nonsense_objects( Subject, Time, List) :-
	believes_objects( Subject, Time, List),
	nonsense_objects( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4

believes_nonsense_words_ideas( Subject, Time, List) :-
	believes_words_ideas( Subject, Time, List),
	nonsense_words_ideas( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5

believes_nonsense_words_objects( Subject, Time, List) :-
	believes_words_objects( Subject, Time, List),
	nonsense_words_objects( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6

believes_nonsense_ideas_objects( Subject, Time, List) :-
	believes_ideas_objects( Subject, Time, List),
	nonsense_ideas_objects( Subject, Time, List).
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7

believes_nonsense_words_ideas_objects( Subject, Time, List) :-
	believes_words_ideas_objects( Subject, Time, List),
	nonsense_words_ideas_objects( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% disbelieves cases.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% 1

disbelieves_nonsense_words( Subject, Time, List) :-
	disbelieves_words( Subject, Time, List),
	nonsense_words( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2
%% disbelieves_in_ideas is primitive for these purposes

disbelieves_nonsense_ideas( Subject, Time, List) :-
	disbelieves_in_ideas( Subject, Time, List),
	list_of_lists(List, [], List_Fin, 0),
	nonsense_ideas( Subject, Time, List_Fin).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3

disbelieves_nonsense_objects( Subject, Time, List) :-
	disbelieves_objects( Subject, Time, List),
	nonsense_objects( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4

disbelieves_nonsense_words_ideas( Subject, Time, List) :-
	disbelieves_words_ideas( Subject, Time, List),
	nonsense_words_ideas( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5

disbelieves_nonsense_words_objects( Subject, Time, List) :-
	disbelieves_words_objects( Subject, Time, List),
	nonsense_words_objects( Subject, Time, List).
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6

disbelieves_nonsense_ideas_objects( Subject, Time, List) :-
	disbelieves_ideas_objects( Subject, Time, List),
	nonsense_ideas_objects( Subject, Time, List).
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7

disbelieves_nonsense_words_ideas_objects( Subject, Time, List) :-
	disbelieves_words_ideas_objects( Subject, Time, List),
	nonsense_words_ideas_objects( Subject, Time, List).
	
