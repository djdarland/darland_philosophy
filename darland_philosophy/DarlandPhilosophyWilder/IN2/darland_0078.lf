%% Copyright (C) 2017, 2019, 2021 Dennis J. Darland

load("RULES2/life_0001.lf")?
load("FACTS2/facts_0071.lf")?
load("RULES2/rules_0071.lf")?
load("RULES2/rules_0072.lf")?
load("RULES2/rules_0073.lf")?
load("RULES2/rules_0074.lf")?
load("RULES2/rules_0075.lf")?
load("RULES2/rules_0076.lf")?
load("RULES2/rules_0077.lf")?
load("RULES2/rules_0078.lf")?

%% This file is part of darland's philosophy.

%% darland's philosophy is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.

%% darland's philosophy is distributed in the hope that it will be useful, 
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%% GNU General Public License for more details.

%% You should have received a copy of the GNU General Public License
%% along with darland's philosophy. If not, see <http://www.gnu.org/licenses/>.
%% This file only checks rules (relating to propositions). 

%% This file uses queries to illustrate agreement or disagreement of subjects.

%% This is an example with a mini universe for queries of high complexity.

%% I use an example from Quine's Word & Object. (pp.144-151).

%% The Story of Cicero and Catiline is given
%% in _Caesar and Christ_, by Will Durant, pp. 140-147.

%% "Tully" is not in the index of that work (or "De Senectute").

%% Wikipedia gives the full name as "Marcus Tullius Cicero"
%% and notes "The name is infrequently anglicized as Tully."
%% It also does not mention "De Senectute".

%% "De Senectute" is in Wikipedia under "Writings of Cicero"

%% Tom believes that Cicero denounced Catiline.
%% Tom does not know Cicero = Tully.

%% In my philosophy, for Tom at that time,
%% "Cicero" R Toms_idea_of_Cicero
%% and
%% Toms_idea of_Cicero S Cicero
%%
%%
%% but not 
%% "Cicero" R Toms_idea_of_Tully
%% 
%%
%% In my program the relation R is represented by the predicate
%% rrrr(Subject, Time, Type, Word, Idea)
%% In my program the relation S is represented by the predicate
%% ssss(Subject, Time, Type, Idea, Object)

%% R | S is represented by rrss

trace_input(true)?

write_time(Ignore)?

%% I indicate for each query whether the immediate response should be
%% TRUE = Yes or FALSE = No

%% There may be subsequient No responses - as I may have asked for additional answers with semicolons.

%% There are 7 relations of both understanding and belief.
%% Those of understanding are defined in terms of rrrr and ssss
%% Those of belief require also a belief_in_ideas relation.

%% The 7 cases are:

%% words
%% ideas
%% objects

%% words_ideas
%% words_objects
%% ideas_objects

%% words_ideas_objects


%% 
%% 1
%% only guarantees word & idea exist
%% NA

%% 2
%% only quarantees singular idea exists 

%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

%% 3
%% Guarantees Object with Idea exists

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% guarantees word and idea

%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%% guarantees word & object

%% TRUE
exists_singular_word_object( tom_dc, now, W, O)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

%% TRUE
exists_singular_idea_object( tom_dc, now, I, O)?
;
;
;
;
;
;
;
;
	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%%

%% TRUE
exists_singular_word_idea_object( tom_dc, now, W, I, O)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% now equality -- only applies with object specified
%% 1
%% NA

%% 2
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

%% 3
%% Guarantees Object with Idea exists

%% TRUE
equal_singular_objects( tom_dc, now, O1, O2)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%% guarantees word & object

%% TRUE
equal_singular_words_objects( quine_dc, now, W1, W1, O1, O2)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

%% TRUE
equal_singular_ideas_objects( quine_dc, now, I1, I2, O1, O2)?
;
;
;
;
;
;
;
;
	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%%
%% TRUE
equal_singular_words_ideas_objects( quine_dc, now, W1, W2,
				   I1, I2,
				   O1, O2)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% now functions -- only applies with object specified
%% 1
%% NA

%% 2
%% NA

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

%% 3
%% Guarantees Object exists

%% TRUE
function_singular_object( tom_dc, now, F, O)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4
%% NA
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5
%% guarantees word & object

%% TRUE
function_singular_word_object( tom_dc, now, F, W, O)?
;
;
;
;
;
;
;
;
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6
%% guarantees idea & object

%% TRUE
function_singular_idea_object( tom_dc, now, F, I, O)?
;
;
;
;
;
;
;
;
	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7
%%
%% TRUE
function_singular_word_idea_object( tom_dc, now,
				   F, W,
				   I, O)?
;
;
;
;
;
;
;
;
	

write_stats(Ignore)?

halt?
