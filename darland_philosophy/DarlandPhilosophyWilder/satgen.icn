global limit
procedure main()
   local i
   init()
#   &trace := -1
   number := 1
   while number < 1000 do {
      write("%% BEGIN number = ", number)
      write(&errout, "number = ", number)
      limit := ?200
      write(&errout, "limit = ", limit)
      sat_test :=  satgen(limit)
      write(&errout, sat_test)
      sat_test := "satisfiable(" || sat_test || ")\?"
      write(sat_test)
      write(";")
      write(";")
      write(";")
      write(" ")
      write(" ")
      write("%% END number = ", number)
      number +:= 1
      }
   
   fin()
end

procedure init()
   infile := open("satgen.top","r")
   while line := read(infile) do {
      write(line)
      }
   close(infile)
end
procedure fin()
   infile := open("satgen.bot","r")
   while line := read(infile) do {
      write(line)
      }
   close(infile)
end

procedure satgen(limit)
   local part1, part2, part3, part4, i, conn
   write(&errout, "INSIDE limit = ", limit)
   if limit < 5 then {
      limit -:= 1
      part1 := ?"ABCDEFGHIJKL"
      write(&errout, "AAA part1 = ", part1)
      return "[top, " ||  part1 ||  "]"
      }
   else {
      write(&errout, "i = ", i)
      conn := ?100
      write(&errout, "conn = ", conn)
      if conn < 50 then {
         part1 := ?"ABCDEFGHIJKL"
         write(&errout, "BBB part1 = ", part1)
         return "[top, " ||  part1 ||  "]"
         }            
      else {
         part1 := "[nand, "
         part2 := satgen(limit - 1) || "," 
#         write(&errout, "CCC part2 = ", part2)
         part3 := satgen(limit - 1) 
#         write(&errout, "DDD part3 = ", part3)
         part4 := "]"
         return (part1 || part2 || part3 || part4)
         }
      }
end
