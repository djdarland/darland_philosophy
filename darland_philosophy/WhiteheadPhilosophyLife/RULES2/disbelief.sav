
%% 1

conceptual_feeling_words( Subject, Subjective_aim, Time, [[Relation_Word] | List]) :-
	%% list of words
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_word_belief(Subject, Time, List,
			  Arity, Type - 1, [Relation_Idea]).

match_not_word_belief(Subject, Time, [], 0, Type, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_word_belief(Subject, Time, [], -999, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

match_not_word_belief(Subject, Time,
		  [[Word] | List],
		  Arity, Type, Idea_List) :-
	% List of Word Idea Pair.
	rrrr( Subject, Time, Word, Idea),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_word_belief(Subject, Time,
			  List,
			  % if Arity is not Arbitrary sub 1
			  cond(Arity =\= -999, Arity - 1,
			       -999),
			  Type, Idea_List_Out).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 2

%% conceptual_feeling_in_ideas is primitive for these purposes

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
conceptual_feeling_objects( Subject, Subjective_aim, Time, [[Relation] | List]) :-
	%% list of idea object Pairs
	number_idea(Relation_Idea, singular),
	ssss2( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_object_belief(Subject, Time, List,
			    Arity, Type - 1, [Relation_Idea]).

conceptual_feeling_objects( Subject, Subjective_aim, Time, [[Relation] | List]) :-
	%% list of idea object Pairs
	number_idea(Relation_Idea, plural),
	tttt( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_object_belief(Subject, Time, List,
			    Arity, Type - 1, [Relation_Idea]).

match_not_object_belief(Subject, Time, [], 0, Type, Idea_List) :- 
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_object_belief(Subject, Time, [], -999, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

match_not_object_belief(Subject, Time,
		    [[Object] | List],
		    Arity, Type, Idea_List) :-
	% List of Objects.
	number_idea(Idea, singular),
	ssss2( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_object_belief(Subject, Time,
			    List,
			    % if Arity is not Arbitrary sub 1
			    cond(Arity =\= -999, Arity - 1,
				 -999),
			    Type, Idea_List_Out).

match_not_object_belief(Subject, Time,
		    [[Object] | List],
		    Arity, Type, Idea_List) :-
	% List of Objects.
	number_idea(Idea, plural),
	tttt( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_object_belief(Subject, Time,
			    List,
			    % if Arity is not Arbitrary sub 1
			    cond(Arity =\= -999, Arity - 1,
				 -999),
			    Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 4

conceptual_feeling_words_ideas( Subject, Subjective_aim, Time, [[Relation_Word, Relation_Idea] | PairList]) :-
	%% list of word, idea pairs
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, singular),
	ssss2( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_word_idea_belief(Subject, Time, PairList,
			       Arity, Type - 1, [Relation_Idea]).

conceptual_feeling_words_ideas( Subject, Subjective_aim, Time, [[Relation_Word, Relation_Idea] | PairList]) :-
	%% list of word, idea pairs
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, plural),
	tttt( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_word_idea_belief(Subject, Time, PairList,
			       Arity, Type - 1, [Relation_Idea]).

match_not_word_idea_belief(Subject, Time, [], 0, Type, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_word_idea_belief(Subject, Time, [], -999, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

match_not_word_idea_belief(Subject, Time,
		       [[Word, Idea] | PairList],
		       Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	rrrr( Subject, Time, Word, Idea),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_word_idea_belief(Subject, Time,
			       PairList,
			       % if Arity is not Arbitrary sub 1
			       cond(Arity =\= -999, Arity - 1,
				    -999),
			       Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 5

conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	%% list of word, idea object pairs
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, singular),
	ssss2( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_word_object_belief(Subject, Time, Pair_List,
			       Arity, Type - 1, [Relation_Idea]).

conceptual_feeling_words_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation] | Pair_List]) :-
	%% list of word, idea object pairs
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, plural),
	tttt( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_word_object_belief(Subject, Time, Pair_List,
			       Arity, Type - 1, [Relation_Idea]).

match_not_word_object_belief(Subject, Time, [], 0, Type, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_word_object_belief(Subject, Time, [], -999, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

match_not_word_object_belief(Subject, Time,
			 [[Word, Object] | Pair_List],
			 Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	rrrr( Subject, Time, Word, Idea),
	number_idea(Idea, singular),
	ssss2( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_word_object_belief(Subject, Time,
				 Pair_List,
				 % if Arity is not Arbitrary sub 1
				 cond(Arity =\= -999, Arity - 1,
				      -999),
				 Type, Idea_List_Out).

match_not_word_object_belief(Subject, Time,
			 [[Word, Object] | Pair_List],
			 Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	rrrr( Subject, Time, Word, Idea),
	number_idea(Idea, plural),
	tttt( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_word_object_belief(Subject, Time,
				 Pair_List,
				 % if Arity is not Arbitrary sub 1
				 cond(Arity =\= -999, Arity - 1,
				      -999),
				 Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 6

conceptual_feeling_ideas_objects(Subject, Subjective_aim, Time, [[Relation_Idea, Relation] | PairList]) :-
	%% list of word, idea object triples
	number_idea(Relation_Idea, singular),
	ssss2(Subject, Time, Relation_Idea, Relation),
	arity_idea(Relation_Idea, Arity),
	type_idea(Relation_Idea, Type),
	match_not_idea_object_belief(Subject, Time, PairList,
				 Arity, Type - 1, [Relation_Idea]).

conceptual_feeling_ideas_objects(Subject, Subjective_aim, Time, [[Relation_Idea, Relation] | PairList]) :-
	%% list of word, idea object triples
	number_idea(Relation_Idea, plural),
	tttt(Subject, Time, Relation_Idea, Relation),
	arity_idea(Relation_Idea, Arity),
	type_idea(Relation_Idea, Type),
	match_not_idea_object_belief(Subject, Time, PairList,
				 Arity, Type - 1, [Relation_Idea]).

match_not_idea_object_belief(Subject, Time, [], 0, Type, Idea_List) :-
	conceptual_feeling_in_ideas(Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_idea_object_belief(Subject, Time, [], Arity, Idea_List) :-
	Arity =:= -999,
	conceptual_feeling_in_ideas(Subject, Subjective_aim, Time, Idea_List).

match_not_idea_object_belief(Subject, Time,
			 [[Idea, Object] | PairList],
			 Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	number_idea(Idea, singular),
	ssss2(Subject, Time, Idea, Object),
	type_idea(Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,
	match_not_idea_object_belief(Subject, Time,
				 PairList,
				 % if Arity is not Arbitrary sub 1
				 cond(Arity =\= -999, Arity - 1,
				      -999),
				 Type, Idea_List_Out).

match_not_idea_object_belief(Subject, Time,
			 [[Idea, Object] | PairList],
			 Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	number_idea(Idea, plural),
	tttt(Subject, Time, Idea, Object),
	type_idea(Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	Arity > 0,
	match_not_idea_object_belief(Subject, Time,
				 PairList,
				 % if Arity is not Arbitrary sub 1
				 cond(Arity =\= -999, Arity - 1,
				      -999),
				 Type, Idea_List_Out).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 7

conceptual_feeling_words_ideas_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation_Idea, Relation] | TripleList]) :-
	%% list of word, idea object triples
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, singular),
	ssss2( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_triple_word_idea_object_belief(Subject, Time, TripleList,
					     Arity, Type - 1, [Relation_Idea]).

conceptual_feeling_words_ideas_objects( Subject, Subjective_aim, Time, [[Relation_Word, Relation_Idea, Relation] | TripleList]) :-
	%% list of word, idea object triples
	rrrr( Subject, Time, Relation_Word, Relation_Idea),
	number_idea(Relation_Idea, plural),
	tttt( Subject, Time, Relation_Idea, Relation),
	arity_idea( Relation_Idea, Arity),
	type_idea( Relation_Idea, Type),
	match_not_triple_word_idea_object_belief(Subject, Time, TripleList,
					     Arity, Type - 1, [Relation_Idea]).

match_not_triple_word_idea_object_belief(Subject, Time, [], 0, Type, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

%% -999 indicates arbitrary arity.
match_not_triple_word_idea_object_belief(Subject, Time, [], -999, Idea_List) :-
	conceptual_feeling_in_ideas( Subject, Subjective_aim, Time, Idea_List).

match_not_triple_word_idea_object_belief(Subject, Time,
				     [[Word, Idea, Object] | TripleList],
				     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	rrrr( Subject, Time, Word, Idea),
	number_idea(Idea, singular),
	ssss2( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_triple_word_idea_object_belief(Subject, Time,
					     TripleList,
					     % if Arity is not Arbitrary sub 1
					     cond(Arity =\= -999, Arity - 1,
						  -999),
					     Type, Idea_List_Out).


match_not_triple_word_idea_object_belief(Subject, Time,
				     [[Word, Idea, Object] | TripleList],
				     Arity, Type, Idea_List) :-
	% List of Word Idea Object Triple.
	rrrr( Subject, Time, Word, Idea),
	number_idea(Idea, plural),
	tttt( Subject, Time, Idea, Object),
	type_idea( Idea, Type),
	Idea_List_Out = append(Idea_List, [Idea]),
	match_not_triple_word_idea_object_belief(Subject, Time,
					     TripleList,
					     % if Arity is not Arbitrary sub 1
					     cond(Arity =\= -999, Arity - 1,
						  -999),
					     Type, Idea_List_Out).

